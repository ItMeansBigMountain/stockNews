1 App Overview: : the app for a user to login (so we will need a sign up process that id prefer to outsource to oauth2 so that we save ourselves from keeping sensitive information in our database) and load their stock portfolio (manually at first) with the ticker name and the amount they have invested. Then we will save their user information and look through a bunch of news apis (maybe have a setting for the user to choose which news sources and as default, search all of them ) for the relevant information for the user's portfolios. we can use chatGPT openAI or any other hugging face LLM to read the news and give us an analysis if the latest news spoke in favor of the stock being bullish or bearish. the average of each article's sentiment analysis will then be displayed for each stock on a dashboard with each stock , how much the user has invested , and the average bullish (green) or negative bearish (red) sentiment analysis of each stock. At the top of this dashboard is a timeframe from start date to end date (by default is present) of when the news was gathered for these stocks. I want to use python django for the backend and angular js for the front end. 

2 Pages/Sections: There will be a login page for the user to either login or sign up , after logging in the user will see an empty dashboard and there will be a button to add stocks they have invested in. As the user adds stocks, update the list below the add button & timeframe button. if the user swipes on left on the stock: reveal a delete button to remove it from the list. if the user swipes right on the stock: reveal an edit button that will make the investment amount number editable for numeric dollar input.  It should be scrollable leaving the add investment, timeframe, and analysis buttons stagnant. at the top of the page (to the left of the add investment button) there will be a date timeframe range defaulted to a week ago to present. This time range will be the time range we use to fetch news articles.   at the bottom of this page there will be a button to run the analysis... on the top right corner there will be a profile settings button that leads to a page where the user can change their user information as well as check marking which news sources they want the analysis to pull articles from. there should also be a back button to get back to the portfollio dashboard. when the user presses the run analysis button in the portfollio dashboard, then the run analysis button should turn into  three dots that blink one after another letting the user know that the backend is loading data. once done, the run analysis button should go back to normal and the stock investments in the scrollable list will update with a red or green background for each stock and to the right of each stock investment there will be a number indicating what percent of news article concluded as bullish or bearish about the asset. 

3 Data Flow: the data flow should be logging in from the client has the Oauth2 submit a token to the backend where the back end fetches the users stocks and investment amounts as well as their personal information such as first name last name, email. then after authenticating, we take the investments information and populate the scrollable list on the frontend. Then updating (add or remove ) investments will update our backend with the updated list and prices. for now we are only using nasdaq symbols so the news articles the backend pulls from should only be for nasdaq. the analysis should use an LLM either from OpenAi's api or hugging face transformers to read the news articles fetched from a list of news apis we specify.

4 user actions: on the login page, the user can login or signup. if the user presses signup, change the login page to the sign up page to sign in with any of the oAuth2 services we provide. On the portfollio dashboard, the user can change the timefreame of when to pull news articles with a calander view a "from" & "to" section. the "to section" with a present time button...  the portfollio dashboard page will also have an add investment button with a pop up to fill out a ticker symbol and amount invested. once they press done on the popup, it will dissapear showing the dashboard with a new symbol and investment amount added to the scrollable list. when the user presses the run analysis button then we will run an analysis on the list of stocks and update the frontend with the results. if the user presses the gear symbol on the top right corner of the screen, they will be sent to a settings page that updates our backend with the inputted and submitted data the user updates. 